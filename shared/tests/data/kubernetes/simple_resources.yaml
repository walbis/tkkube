# Simple Kubernetes resources for basic testing
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-app
  labels:
    environment: test
    app.kubernetes.io/name: test-application
  annotations:
    description: "Test namespace for integration testing"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
  namespace: test-app
  labels:
    app: test-app
    component: config
data:
  database_url: "postgresql://localhost:5432/testdb"
  debug_mode: "true"
  log_level: "info"
  feature_flags: |
    feature_a: true
    feature_b: false
    feature_c: true
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: test-app
  labels:
    app: test-app
    component: secrets
type: Opaque
data:
  database_password: dGVzdFBhc3N3b3JkMTIz  # testPassword123
  api_key: YWJjZGVmZ2hpamtsbW5vcA==  # abcdefghijklmnop
  jwt_secret: c3VwZXJTZWNyZXRLZXkxMjM=  # superSecretKey123
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
  namespace: test-app
  labels:
    app: test-app
    version: v1.0.0
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
        version: v1.0.0
    spec:
      containers:
      - name: app
        image: nginx:1.21
        ports:
        - containerPort: 80
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: database_url
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: database_password
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: test-app-service
  namespace: test-app
  labels:
    app: test-app
spec:
  selector:
    app: test-app
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-app-ingress
  namespace: test-app
  labels:
    app: test-app
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - test-app.example.com
    secretName: test-app-tls
  rules:
  - host: test-app.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: test-app-service
            port:
              number: 80